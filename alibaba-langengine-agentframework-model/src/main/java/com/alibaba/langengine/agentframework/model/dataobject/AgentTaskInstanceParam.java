/**
 * Copyright (C) 2024 AIDC-AI
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.alibaba.langengine.agentframework.model.dataobject;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * This class was generated by Ali-Generator
 * @author xiaoxuan.lp
 */
public class AgentTaskInstanceParam {
    /**
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     *
     * @mbg.generated
     */
    @Deprecated
    protected boolean distinct;

    /**
     *
     * @mbg.generated
     */
    protected boolean page;

    /**
     *
     * @mbg.generated
     */
    protected int pageIndex;

    /**
     *
     * @mbg.generated
     */
    protected int pageSize;

    /**
     *
     * @mbg.generated
     */
    protected int pageStart;

    /**
     *
     * @mbg.generated
     */
    protected String distinctSql;

    /**
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     *
     * @mbg.generated
     */
    public AgentTaskInstanceParam() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * @param orderCondition
     * @param sortType
     * @return
     *
     * @mbg.generated
     */
    public AgentTaskInstanceParam appendOrderByClause(OrderCondition orderCondition, SortType sortType) {
        if (null != orderByClause) {
            orderByClause = orderByClause + ", " + orderCondition.getColumnName() + " " + sortType.getValue();
        } else {
            orderByClause = orderCondition.getColumnName() + " " + sortType.getValue();
        }
        return this;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * @param distinct
     *
     * @mbg.generated
     */
    @Deprecated
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    @Deprecated
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * @param page
     * @return
     *
     * @mbg.generated
     */
    public AgentTaskInstanceParam setPage(boolean page) {
        this.page = page;
        return this;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public boolean isPage() {
        return page;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public int getPageIndex() {
        return pageIndex;
    }

    /**
     * @param pageSize
     * @return
     *
     * @mbg.generated
     */
    public AgentTaskInstanceParam setPageSize(int pageSize) {
        this.pageSize = pageSize < 1 ? 10 : pageSize;
        this.pageIndex = pageStart < 1 ? 0 : (pageStart - 1) * this.pageSize;
        return this;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public int getPageSize() {
        return pageSize;
    }

    /**
     * @param pageStart
     * @return
     *
     * @mbg.generated
     */
    public AgentTaskInstanceParam setPageStart(int pageStart) {
        this.pageStart = pageStart < 1 ? 1 : pageStart;
        this.pageIndex = (this.pageStart - 1) * this.pageSize;
        return this;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public int getPageStart() {
        return pageStart;
    }

    /**
     * @param pageStart
     * @param pageSize
     *
     * @mbg.generated
     */
    public void setPagination(int pageStart, int pageSize) {
        this.page = true;
        this.pageSize = pageSize < 1 ? 10 : pageSize;
        this.pageIndex = pageStart < 1 ? 0 : (pageStart - 1) * this.pageSize;
    }

    /**
     * @param condition
     * @return
     *
     * @mbg.generated
     */
    public AgentTaskInstanceParam appendDistinct(OrderCondition condition) {
        if (null != distinctSql){
            distinctSql = distinctSql + ", " + condition.getColumnName();
        } else {
            distinctSql = condition.getColumnName();
        }
        return this;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * @param criteria
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     *
     * @mbg.generated
     */
    protected abstract static class AbstractGeneratedCriteria {
        protected List<Criterion> criteria;

        protected AbstractGeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andGmtCreateIsNull() {
            addCriterion("gmt_create is null");
            return (Criteria) this;
        }

        public Criteria andGmtCreateIsNotNull() {
            addCriterion("gmt_create is not null");
            return (Criteria) this;
        }

        public Criteria andGmtCreateEqualTo(Date value) {
            addCriterion("gmt_create =", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotEqualTo(Date value) {
            addCriterion("gmt_create <>", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateGreaterThan(Date value) {
            addCriterion("gmt_create >", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateGreaterThanOrEqualTo(Date value) {
            addCriterion("gmt_create >=", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateLessThan(Date value) {
            addCriterion("gmt_create <", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateLessThanOrEqualTo(Date value) {
            addCriterion("gmt_create <=", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateIn(List<Date> values) {
            addCriterion("gmt_create in", values, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotIn(List<Date> values) {
            addCriterion("gmt_create not in", values, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateBetween(Date value1, Date value2) {
            addCriterion("gmt_create between", value1, value2, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotBetween(Date value1, Date value2) {
            addCriterion("gmt_create not between", value1, value2, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedIsNull() {
            addCriterion("gmt_modified is null");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedIsNotNull() {
            addCriterion("gmt_modified is not null");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedEqualTo(Date value) {
            addCriterion("gmt_modified =", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotEqualTo(Date value) {
            addCriterion("gmt_modified <>", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedGreaterThan(Date value) {
            addCriterion("gmt_modified >", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedGreaterThanOrEqualTo(Date value) {
            addCriterion("gmt_modified >=", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedLessThan(Date value) {
            addCriterion("gmt_modified <", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedLessThanOrEqualTo(Date value) {
            addCriterion("gmt_modified <=", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedIn(List<Date> values) {
            addCriterion("gmt_modified in", values, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotIn(List<Date> values) {
            addCriterion("gmt_modified not in", values, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedBetween(Date value1, Date value2) {
            addCriterion("gmt_modified between", value1, value2, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotBetween(Date value1, Date value2) {
            addCriterion("gmt_modified not between", value1, value2, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andProcessDefinitionIdIsNull() {
            addCriterion("process_definition_id is null");
            return (Criteria) this;
        }

        public Criteria andProcessDefinitionIdIsNotNull() {
            addCriterion("process_definition_id is not null");
            return (Criteria) this;
        }

        public Criteria andProcessDefinitionIdEqualTo(String value) {
            addCriterion("process_definition_id =", value, "processDefinitionId");
            return (Criteria) this;
        }

        public Criteria andProcessDefinitionIdNotEqualTo(String value) {
            addCriterion("process_definition_id <>", value, "processDefinitionId");
            return (Criteria) this;
        }

        public Criteria andProcessDefinitionIdGreaterThan(String value) {
            addCriterion("process_definition_id >", value, "processDefinitionId");
            return (Criteria) this;
        }

        public Criteria andProcessDefinitionIdGreaterThanOrEqualTo(String value) {
            addCriterion("process_definition_id >=", value, "processDefinitionId");
            return (Criteria) this;
        }

        public Criteria andProcessDefinitionIdLessThan(String value) {
            addCriterion("process_definition_id <", value, "processDefinitionId");
            return (Criteria) this;
        }

        public Criteria andProcessDefinitionIdLessThanOrEqualTo(String value) {
            addCriterion("process_definition_id <=", value, "processDefinitionId");
            return (Criteria) this;
        }

        public Criteria andProcessDefinitionIdLike(String value) {
            addCriterion("process_definition_id like", value, "processDefinitionId");
            return (Criteria) this;
        }

        public Criteria andProcessDefinitionIdNotLike(String value) {
            addCriterion("process_definition_id not like", value, "processDefinitionId");
            return (Criteria) this;
        }

        public Criteria andProcessDefinitionIdIn(List<String> values) {
            addCriterion("process_definition_id in", values, "processDefinitionId");
            return (Criteria) this;
        }

        public Criteria andProcessDefinitionIdNotIn(List<String> values) {
            addCriterion("process_definition_id not in", values, "processDefinitionId");
            return (Criteria) this;
        }

        public Criteria andProcessDefinitionIdBetween(String value1, String value2) {
            addCriterion("process_definition_id between", value1, value2, "processDefinitionId");
            return (Criteria) this;
        }

        public Criteria andProcessDefinitionIdNotBetween(String value1, String value2) {
            addCriterion("process_definition_id not between", value1, value2, "processDefinitionId");
            return (Criteria) this;
        }

        public Criteria andProcessDefinitionVersionIsNull() {
            addCriterion("process_definition_version is null");
            return (Criteria) this;
        }

        public Criteria andProcessDefinitionVersionIsNotNull() {
            addCriterion("process_definition_version is not null");
            return (Criteria) this;
        }

        public Criteria andProcessDefinitionVersionEqualTo(Integer value) {
            addCriterion("process_definition_version =", value, "processDefinitionVersion");
            return (Criteria) this;
        }

        public Criteria andProcessDefinitionVersionNotEqualTo(Integer value) {
            addCriterion("process_definition_version <>", value, "processDefinitionVersion");
            return (Criteria) this;
        }

        public Criteria andProcessDefinitionVersionGreaterThan(Integer value) {
            addCriterion("process_definition_version >", value, "processDefinitionVersion");
            return (Criteria) this;
        }

        public Criteria andProcessDefinitionVersionGreaterThanOrEqualTo(Integer value) {
            addCriterion("process_definition_version >=", value, "processDefinitionVersion");
            return (Criteria) this;
        }

        public Criteria andProcessDefinitionVersionLessThan(Integer value) {
            addCriterion("process_definition_version <", value, "processDefinitionVersion");
            return (Criteria) this;
        }

        public Criteria andProcessDefinitionVersionLessThanOrEqualTo(Integer value) {
            addCriterion("process_definition_version <=", value, "processDefinitionVersion");
            return (Criteria) this;
        }

        public Criteria andProcessDefinitionVersionIn(List<Integer> values) {
            addCriterion("process_definition_version in", values, "processDefinitionVersion");
            return (Criteria) this;
        }

        public Criteria andProcessDefinitionVersionNotIn(List<Integer> values) {
            addCriterion("process_definition_version not in", values, "processDefinitionVersion");
            return (Criteria) this;
        }

        public Criteria andProcessDefinitionVersionBetween(Integer value1, Integer value2) {
            addCriterion("process_definition_version between", value1, value2, "processDefinitionVersion");
            return (Criteria) this;
        }

        public Criteria andProcessDefinitionVersionNotBetween(Integer value1, Integer value2) {
            addCriterion("process_definition_version not between", value1, value2, "processDefinitionVersion");
            return (Criteria) this;
        }

        public Criteria andProcessInstanceIdIsNull() {
            addCriterion("process_instance_id is null");
            return (Criteria) this;
        }

        public Criteria andProcessInstanceIdIsNotNull() {
            addCriterion("process_instance_id is not null");
            return (Criteria) this;
        }

        public Criteria andProcessInstanceIdEqualTo(String value) {
            addCriterion("process_instance_id =", value, "processInstanceId");
            return (Criteria) this;
        }

        public Criteria andProcessInstanceIdNotEqualTo(String value) {
            addCriterion("process_instance_id <>", value, "processInstanceId");
            return (Criteria) this;
        }

        public Criteria andProcessInstanceIdGreaterThan(String value) {
            addCriterion("process_instance_id >", value, "processInstanceId");
            return (Criteria) this;
        }

        public Criteria andProcessInstanceIdGreaterThanOrEqualTo(String value) {
            addCriterion("process_instance_id >=", value, "processInstanceId");
            return (Criteria) this;
        }

        public Criteria andProcessInstanceIdLessThan(String value) {
            addCriterion("process_instance_id <", value, "processInstanceId");
            return (Criteria) this;
        }

        public Criteria andProcessInstanceIdLessThanOrEqualTo(String value) {
            addCriterion("process_instance_id <=", value, "processInstanceId");
            return (Criteria) this;
        }

        public Criteria andProcessInstanceIdLike(String value) {
            addCriterion("process_instance_id like", value, "processInstanceId");
            return (Criteria) this;
        }

        public Criteria andProcessInstanceIdNotLike(String value) {
            addCriterion("process_instance_id not like", value, "processInstanceId");
            return (Criteria) this;
        }

        public Criteria andProcessInstanceIdIn(List<String> values) {
            addCriterion("process_instance_id in", values, "processInstanceId");
            return (Criteria) this;
        }

        public Criteria andProcessInstanceIdNotIn(List<String> values) {
            addCriterion("process_instance_id not in", values, "processInstanceId");
            return (Criteria) this;
        }

        public Criteria andProcessInstanceIdBetween(String value1, String value2) {
            addCriterion("process_instance_id between", value1, value2, "processInstanceId");
            return (Criteria) this;
        }

        public Criteria andProcessInstanceIdNotBetween(String value1, String value2) {
            addCriterion("process_instance_id not between", value1, value2, "processInstanceId");
            return (Criteria) this;
        }

        public Criteria andProcessInstanceNameIsNull() {
            addCriterion("process_instance_name is null");
            return (Criteria) this;
        }

        public Criteria andProcessInstanceNameIsNotNull() {
            addCriterion("process_instance_name is not null");
            return (Criteria) this;
        }

        public Criteria andProcessInstanceNameEqualTo(String value) {
            addCriterion("process_instance_name =", value, "processInstanceName");
            return (Criteria) this;
        }

        public Criteria andProcessInstanceNameNotEqualTo(String value) {
            addCriterion("process_instance_name <>", value, "processInstanceName");
            return (Criteria) this;
        }

        public Criteria andProcessInstanceNameGreaterThan(String value) {
            addCriterion("process_instance_name >", value, "processInstanceName");
            return (Criteria) this;
        }

        public Criteria andProcessInstanceNameGreaterThanOrEqualTo(String value) {
            addCriterion("process_instance_name >=", value, "processInstanceName");
            return (Criteria) this;
        }

        public Criteria andProcessInstanceNameLessThan(String value) {
            addCriterion("process_instance_name <", value, "processInstanceName");
            return (Criteria) this;
        }

        public Criteria andProcessInstanceNameLessThanOrEqualTo(String value) {
            addCriterion("process_instance_name <=", value, "processInstanceName");
            return (Criteria) this;
        }

        public Criteria andProcessInstanceNameLike(String value) {
            addCriterion("process_instance_name like", value, "processInstanceName");
            return (Criteria) this;
        }

        public Criteria andProcessInstanceNameNotLike(String value) {
            addCriterion("process_instance_name not like", value, "processInstanceName");
            return (Criteria) this;
        }

        public Criteria andProcessInstanceNameIn(List<String> values) {
            addCriterion("process_instance_name in", values, "processInstanceName");
            return (Criteria) this;
        }

        public Criteria andProcessInstanceNameNotIn(List<String> values) {
            addCriterion("process_instance_name not in", values, "processInstanceName");
            return (Criteria) this;
        }

        public Criteria andProcessInstanceNameBetween(String value1, String value2) {
            addCriterion("process_instance_name between", value1, value2, "processInstanceName");
            return (Criteria) this;
        }

        public Criteria andProcessInstanceNameNotBetween(String value1, String value2) {
            addCriterion("process_instance_name not between", value1, value2, "processInstanceName");
            return (Criteria) this;
        }

        public Criteria andActivityIdIsNull() {
            addCriterion("activity_id is null");
            return (Criteria) this;
        }

        public Criteria andActivityIdIsNotNull() {
            addCriterion("activity_id is not null");
            return (Criteria) this;
        }

        public Criteria andActivityIdEqualTo(String value) {
            addCriterion("activity_id =", value, "activityId");
            return (Criteria) this;
        }

        public Criteria andActivityIdNotEqualTo(String value) {
            addCriterion("activity_id <>", value, "activityId");
            return (Criteria) this;
        }

        public Criteria andActivityIdGreaterThan(String value) {
            addCriterion("activity_id >", value, "activityId");
            return (Criteria) this;
        }

        public Criteria andActivityIdGreaterThanOrEqualTo(String value) {
            addCriterion("activity_id >=", value, "activityId");
            return (Criteria) this;
        }

        public Criteria andActivityIdLessThan(String value) {
            addCriterion("activity_id <", value, "activityId");
            return (Criteria) this;
        }

        public Criteria andActivityIdLessThanOrEqualTo(String value) {
            addCriterion("activity_id <=", value, "activityId");
            return (Criteria) this;
        }

        public Criteria andActivityIdLike(String value) {
            addCriterion("activity_id like", value, "activityId");
            return (Criteria) this;
        }

        public Criteria andActivityIdNotLike(String value) {
            addCriterion("activity_id not like", value, "activityId");
            return (Criteria) this;
        }

        public Criteria andActivityIdIn(List<String> values) {
            addCriterion("activity_id in", values, "activityId");
            return (Criteria) this;
        }

        public Criteria andActivityIdNotIn(List<String> values) {
            addCriterion("activity_id not in", values, "activityId");
            return (Criteria) this;
        }

        public Criteria andActivityIdBetween(String value1, String value2) {
            addCriterion("activity_id between", value1, value2, "activityId");
            return (Criteria) this;
        }

        public Criteria andActivityIdNotBetween(String value1, String value2) {
            addCriterion("activity_id not between", value1, value2, "activityId");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("status is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("status is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(Integer value) {
            addCriterion("status =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(Integer value) {
            addCriterion("status <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(Integer value) {
            addCriterion("status >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("status >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(Integer value) {
            addCriterion("status <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(Integer value) {
            addCriterion("status <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<Integer> values) {
            addCriterion("status in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<Integer> values) {
            addCriterion("status not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(Integer value1, Integer value2) {
            addCriterion("status between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("status not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andRetryTimesIsNull() {
            addCriterion("retry_times is null");
            return (Criteria) this;
        }

        public Criteria andRetryTimesIsNotNull() {
            addCriterion("retry_times is not null");
            return (Criteria) this;
        }

        public Criteria andRetryTimesEqualTo(Integer value) {
            addCriterion("retry_times =", value, "retryTimes");
            return (Criteria) this;
        }

        public Criteria andRetryTimesNotEqualTo(Integer value) {
            addCriterion("retry_times <>", value, "retryTimes");
            return (Criteria) this;
        }

        public Criteria andRetryTimesGreaterThan(Integer value) {
            addCriterion("retry_times >", value, "retryTimes");
            return (Criteria) this;
        }

        public Criteria andRetryTimesGreaterThanOrEqualTo(Integer value) {
            addCriterion("retry_times >=", value, "retryTimes");
            return (Criteria) this;
        }

        public Criteria andRetryTimesLessThan(Integer value) {
            addCriterion("retry_times <", value, "retryTimes");
            return (Criteria) this;
        }

        public Criteria andRetryTimesLessThanOrEqualTo(Integer value) {
            addCriterion("retry_times <=", value, "retryTimes");
            return (Criteria) this;
        }

        public Criteria andRetryTimesIn(List<Integer> values) {
            addCriterion("retry_times in", values, "retryTimes");
            return (Criteria) this;
        }

        public Criteria andRetryTimesNotIn(List<Integer> values) {
            addCriterion("retry_times not in", values, "retryTimes");
            return (Criteria) this;
        }

        public Criteria andRetryTimesBetween(Integer value1, Integer value2) {
            addCriterion("retry_times between", value1, value2, "retryTimes");
            return (Criteria) this;
        }

        public Criteria andRetryTimesNotBetween(Integer value1, Integer value2) {
            addCriterion("retry_times not between", value1, value2, "retryTimes");
            return (Criteria) this;
        }

        public Criteria andNeedRetryIsNull() {
            addCriterion("need_retry is null");
            return (Criteria) this;
        }

        public Criteria andNeedRetryIsNotNull() {
            addCriterion("need_retry is not null");
            return (Criteria) this;
        }

        public Criteria andNeedRetryEqualTo(Integer value) {
            addCriterion("need_retry =", value, "needRetry");
            return (Criteria) this;
        }

        public Criteria andNeedRetryNotEqualTo(Integer value) {
            addCriterion("need_retry <>", value, "needRetry");
            return (Criteria) this;
        }

        public Criteria andNeedRetryGreaterThan(Integer value) {
            addCriterion("need_retry >", value, "needRetry");
            return (Criteria) this;
        }

        public Criteria andNeedRetryGreaterThanOrEqualTo(Integer value) {
            addCriterion("need_retry >=", value, "needRetry");
            return (Criteria) this;
        }

        public Criteria andNeedRetryLessThan(Integer value) {
            addCriterion("need_retry <", value, "needRetry");
            return (Criteria) this;
        }

        public Criteria andNeedRetryLessThanOrEqualTo(Integer value) {
            addCriterion("need_retry <=", value, "needRetry");
            return (Criteria) this;
        }

        public Criteria andNeedRetryIn(List<Integer> values) {
            addCriterion("need_retry in", values, "needRetry");
            return (Criteria) this;
        }

        public Criteria andNeedRetryNotIn(List<Integer> values) {
            addCriterion("need_retry not in", values, "needRetry");
            return (Criteria) this;
        }

        public Criteria andNeedRetryBetween(Integer value1, Integer value2) {
            addCriterion("need_retry between", value1, value2, "needRetry");
            return (Criteria) this;
        }

        public Criteria andNeedRetryNotBetween(Integer value1, Integer value2) {
            addCriterion("need_retry not between", value1, value2, "needRetry");
            return (Criteria) this;
        }

        public Criteria andOwnerIdIsNull() {
            addCriterion("owner_id is null");
            return (Criteria) this;
        }

        public Criteria andOwnerIdIsNotNull() {
            addCriterion("owner_id is not null");
            return (Criteria) this;
        }

        public Criteria andOwnerIdEqualTo(String value) {
            addCriterion("owner_id =", value, "ownerId");
            return (Criteria) this;
        }

        public Criteria andOwnerIdNotEqualTo(String value) {
            addCriterion("owner_id <>", value, "ownerId");
            return (Criteria) this;
        }

        public Criteria andOwnerIdGreaterThan(String value) {
            addCriterion("owner_id >", value, "ownerId");
            return (Criteria) this;
        }

        public Criteria andOwnerIdGreaterThanOrEqualTo(String value) {
            addCriterion("owner_id >=", value, "ownerId");
            return (Criteria) this;
        }

        public Criteria andOwnerIdLessThan(String value) {
            addCriterion("owner_id <", value, "ownerId");
            return (Criteria) this;
        }

        public Criteria andOwnerIdLessThanOrEqualTo(String value) {
            addCriterion("owner_id <=", value, "ownerId");
            return (Criteria) this;
        }

        public Criteria andOwnerIdLike(String value) {
            addCriterion("owner_id like", value, "ownerId");
            return (Criteria) this;
        }

        public Criteria andOwnerIdNotLike(String value) {
            addCriterion("owner_id not like", value, "ownerId");
            return (Criteria) this;
        }

        public Criteria andOwnerIdIn(List<String> values) {
            addCriterion("owner_id in", values, "ownerId");
            return (Criteria) this;
        }

        public Criteria andOwnerIdNotIn(List<String> values) {
            addCriterion("owner_id not in", values, "ownerId");
            return (Criteria) this;
        }

        public Criteria andOwnerIdBetween(String value1, String value2) {
            addCriterion("owner_id between", value1, value2, "ownerId");
            return (Criteria) this;
        }

        public Criteria andOwnerIdNotBetween(String value1, String value2) {
            addCriterion("owner_id not between", value1, value2, "ownerId");
            return (Criteria) this;
        }

        public Criteria andTaskIdIsNull() {
            addCriterion("task_id is null");
            return (Criteria) this;
        }

        public Criteria andTaskIdIsNotNull() {
            addCriterion("task_id is not null");
            return (Criteria) this;
        }

        public Criteria andTaskIdEqualTo(String value) {
            addCriterion("task_id =", value, "taskId");
            return (Criteria) this;
        }

        public Criteria andTaskIdNotEqualTo(String value) {
            addCriterion("task_id <>", value, "taskId");
            return (Criteria) this;
        }

        public Criteria andTaskIdGreaterThan(String value) {
            addCriterion("task_id >", value, "taskId");
            return (Criteria) this;
        }

        public Criteria andTaskIdGreaterThanOrEqualTo(String value) {
            addCriterion("task_id >=", value, "taskId");
            return (Criteria) this;
        }

        public Criteria andTaskIdLessThan(String value) {
            addCriterion("task_id <", value, "taskId");
            return (Criteria) this;
        }

        public Criteria andTaskIdLessThanOrEqualTo(String value) {
            addCriterion("task_id <=", value, "taskId");
            return (Criteria) this;
        }

        public Criteria andTaskIdLike(String value) {
            addCriterion("task_id like", value, "taskId");
            return (Criteria) this;
        }

        public Criteria andTaskIdNotLike(String value) {
            addCriterion("task_id not like", value, "taskId");
            return (Criteria) this;
        }

        public Criteria andTaskIdIn(List<String> values) {
            addCriterion("task_id in", values, "taskId");
            return (Criteria) this;
        }

        public Criteria andTaskIdNotIn(List<String> values) {
            addCriterion("task_id not in", values, "taskId");
            return (Criteria) this;
        }

        public Criteria andTaskIdBetween(String value1, String value2) {
            addCriterion("task_id between", value1, value2, "taskId");
            return (Criteria) this;
        }

        public Criteria andTaskIdNotBetween(String value1, String value2) {
            addCriterion("task_id not between", value1, value2, "taskId");
            return (Criteria) this;
        }

        public Criteria andAgentCodeIsNull() {
            addCriterion("agent_code is null");
            return (Criteria) this;
        }

        public Criteria andAgentCodeIsNotNull() {
            addCriterion("agent_code is not null");
            return (Criteria) this;
        }

        public Criteria andAgentCodeEqualTo(String value) {
            addCriterion("agent_code =", value, "agentCode");
            return (Criteria) this;
        }

        public Criteria andAgentCodeNotEqualTo(String value) {
            addCriterion("agent_code <>", value, "agentCode");
            return (Criteria) this;
        }

        public Criteria andAgentCodeGreaterThan(String value) {
            addCriterion("agent_code >", value, "agentCode");
            return (Criteria) this;
        }

        public Criteria andAgentCodeGreaterThanOrEqualTo(String value) {
            addCriterion("agent_code >=", value, "agentCode");
            return (Criteria) this;
        }

        public Criteria andAgentCodeLessThan(String value) {
            addCriterion("agent_code <", value, "agentCode");
            return (Criteria) this;
        }

        public Criteria andAgentCodeLessThanOrEqualTo(String value) {
            addCriterion("agent_code <=", value, "agentCode");
            return (Criteria) this;
        }

        public Criteria andAgentCodeLike(String value) {
            addCriterion("agent_code like", value, "agentCode");
            return (Criteria) this;
        }

        public Criteria andAgentCodeNotLike(String value) {
            addCriterion("agent_code not like", value, "agentCode");
            return (Criteria) this;
        }

        public Criteria andAgentCodeIn(List<String> values) {
            addCriterion("agent_code in", values, "agentCode");
            return (Criteria) this;
        }

        public Criteria andAgentCodeNotIn(List<String> values) {
            addCriterion("agent_code not in", values, "agentCode");
            return (Criteria) this;
        }

        public Criteria andAgentCodeBetween(String value1, String value2) {
            addCriterion("agent_code between", value1, value2, "agentCode");
            return (Criteria) this;
        }

        public Criteria andAgentCodeNotBetween(String value1, String value2) {
            addCriterion("agent_code not between", value1, value2, "agentCode");
            return (Criteria) this;
        }

        public Criteria andParallelStartActivityIdIsNull() {
            addCriterion("parallel_start_activity_id is null");
            return (Criteria) this;
        }

        public Criteria andParallelStartActivityIdIsNotNull() {
            addCriterion("parallel_start_activity_id is not null");
            return (Criteria) this;
        }

        public Criteria andParallelStartActivityIdEqualTo(String value) {
            addCriterion("parallel_start_activity_id =", value, "parallelStartActivityId");
            return (Criteria) this;
        }

        public Criteria andParallelStartActivityIdNotEqualTo(String value) {
            addCriterion("parallel_start_activity_id <>", value, "parallelStartActivityId");
            return (Criteria) this;
        }

        public Criteria andParallelStartActivityIdGreaterThan(String value) {
            addCriterion("parallel_start_activity_id >", value, "parallelStartActivityId");
            return (Criteria) this;
        }

        public Criteria andParallelStartActivityIdGreaterThanOrEqualTo(String value) {
            addCriterion("parallel_start_activity_id >=", value, "parallelStartActivityId");
            return (Criteria) this;
        }

        public Criteria andParallelStartActivityIdLessThan(String value) {
            addCriterion("parallel_start_activity_id <", value, "parallelStartActivityId");
            return (Criteria) this;
        }

        public Criteria andParallelStartActivityIdLessThanOrEqualTo(String value) {
            addCriterion("parallel_start_activity_id <=", value, "parallelStartActivityId");
            return (Criteria) this;
        }

        public Criteria andParallelStartActivityIdLike(String value) {
            addCriterion("parallel_start_activity_id like", value, "parallelStartActivityId");
            return (Criteria) this;
        }

        public Criteria andParallelStartActivityIdNotLike(String value) {
            addCriterion("parallel_start_activity_id not like", value, "parallelStartActivityId");
            return (Criteria) this;
        }

        public Criteria andParallelStartActivityIdIn(List<String> values) {
            addCriterion("parallel_start_activity_id in", values, "parallelStartActivityId");
            return (Criteria) this;
        }

        public Criteria andParallelStartActivityIdNotIn(List<String> values) {
            addCriterion("parallel_start_activity_id not in", values, "parallelStartActivityId");
            return (Criteria) this;
        }

        public Criteria andParallelStartActivityIdBetween(String value1, String value2) {
            addCriterion("parallel_start_activity_id between", value1, value2, "parallelStartActivityId");
            return (Criteria) this;
        }

        public Criteria andParallelStartActivityIdNotBetween(String value1, String value2) {
            addCriterion("parallel_start_activity_id not between", value1, value2, "parallelStartActivityId");
            return (Criteria) this;
        }

        public Criteria andHasParallelIsNull() {
            addCriterion("has_parallel is null");
            return (Criteria) this;
        }

        public Criteria andHasParallelIsNotNull() {
            addCriterion("has_parallel is not null");
            return (Criteria) this;
        }

        public Criteria andHasParallelEqualTo(Integer value) {
            addCriterion("has_parallel =", value, "hasParallel");
            return (Criteria) this;
        }

        public Criteria andHasParallelNotEqualTo(Integer value) {
            addCriterion("has_parallel <>", value, "hasParallel");
            return (Criteria) this;
        }

        public Criteria andHasParallelGreaterThan(Integer value) {
            addCriterion("has_parallel >", value, "hasParallel");
            return (Criteria) this;
        }

        public Criteria andHasParallelGreaterThanOrEqualTo(Integer value) {
            addCriterion("has_parallel >=", value, "hasParallel");
            return (Criteria) this;
        }

        public Criteria andHasParallelLessThan(Integer value) {
            addCriterion("has_parallel <", value, "hasParallel");
            return (Criteria) this;
        }

        public Criteria andHasParallelLessThanOrEqualTo(Integer value) {
            addCriterion("has_parallel <=", value, "hasParallel");
            return (Criteria) this;
        }

        public Criteria andHasParallelIn(List<Integer> values) {
            addCriterion("has_parallel in", values, "hasParallel");
            return (Criteria) this;
        }

        public Criteria andHasParallelNotIn(List<Integer> values) {
            addCriterion("has_parallel not in", values, "hasParallel");
            return (Criteria) this;
        }

        public Criteria andHasParallelBetween(Integer value1, Integer value2) {
            addCriterion("has_parallel between", value1, value2, "hasParallel");
            return (Criteria) this;
        }

        public Criteria andHasParallelNotBetween(Integer value1, Integer value2) {
            addCriterion("has_parallel not between", value1, value2, "hasParallel");
            return (Criteria) this;
        }

        public Criteria andIdEqualToWhenPresent(Long value) {
            if(value != null) {
                addCriterion("id =", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdNotEqualToWhenPresent(Long value) {
            if(value != null) {
                addCriterion("id <>", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanWhenPresent(Long value) {
            if(value != null) {
                addCriterion("id >", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualToWhenPresent(Long value) {
            if(value != null) {
                addCriterion("id >=", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdLessThanWhenPresent(Long value) {
            if(value != null) {
                addCriterion("id <", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualToWhenPresent(Long value) {
            if(value != null) {
                addCriterion("id <=", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdInWhenPresent(List<Long> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("id in", values, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdNotInWhenPresent(List<Long> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("id not in", values, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdBetweenWhenPresent(Long value1, Long value2) {
            if(value1 != null && value2 != null){
                addCriterion("id between", value1, value2, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdNotBetweenWhenPresent(Long value1, Long value2) {
            if(value1 != null && value2 != null){
                addCriterion("id not between", value1, value2, "id");
            }
            return (Criteria) this;
        }

        public Criteria andGmtCreateEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_create =", value, "gmtCreate");
            }
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_create <>", value, "gmtCreate");
            }
            return (Criteria) this;
        }

        public Criteria andGmtCreateGreaterThanWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_create >", value, "gmtCreate");
            }
            return (Criteria) this;
        }

        public Criteria andGmtCreateGreaterThanOrEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_create >=", value, "gmtCreate");
            }
            return (Criteria) this;
        }

        public Criteria andGmtCreateLessThanWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_create <", value, "gmtCreate");
            }
            return (Criteria) this;
        }

        public Criteria andGmtCreateLessThanOrEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_create <=", value, "gmtCreate");
            }
            return (Criteria) this;
        }

        public Criteria andGmtCreateInWhenPresent(List<Date> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("gmt_create in", values, "gmtCreate");
            }
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotInWhenPresent(List<Date> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("gmt_create not in", values, "gmtCreate");
            }
            return (Criteria) this;
        }

        public Criteria andGmtCreateBetweenWhenPresent(Date value1, Date value2) {
            if(value1 != null && value2 != null){
                addCriterion("gmt_create between", value1, value2, "gmtCreate");
            }
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotBetweenWhenPresent(Date value1, Date value2) {
            if(value1 != null && value2 != null){
                addCriterion("gmt_create not between", value1, value2, "gmtCreate");
            }
            return (Criteria) this;
        }

        public Criteria andGmtModifiedEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_modified =", value, "gmtModified");
            }
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_modified <>", value, "gmtModified");
            }
            return (Criteria) this;
        }

        public Criteria andGmtModifiedGreaterThanWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_modified >", value, "gmtModified");
            }
            return (Criteria) this;
        }

        public Criteria andGmtModifiedGreaterThanOrEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_modified >=", value, "gmtModified");
            }
            return (Criteria) this;
        }

        public Criteria andGmtModifiedLessThanWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_modified <", value, "gmtModified");
            }
            return (Criteria) this;
        }

        public Criteria andGmtModifiedLessThanOrEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_modified <=", value, "gmtModified");
            }
            return (Criteria) this;
        }

        public Criteria andGmtModifiedInWhenPresent(List<Date> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("gmt_modified in", values, "gmtModified");
            }
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotInWhenPresent(List<Date> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("gmt_modified not in", values, "gmtModified");
            }
            return (Criteria) this;
        }

        public Criteria andGmtModifiedBetweenWhenPresent(Date value1, Date value2) {
            if(value1 != null && value2 != null){
                addCriterion("gmt_modified between", value1, value2, "gmtModified");
            }
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotBetweenWhenPresent(Date value1, Date value2) {
            if(value1 != null && value2 != null){
                addCriterion("gmt_modified not between", value1, value2, "gmtModified");
            }
            return (Criteria) this;
        }

        public Criteria andProcessDefinitionIdEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("process_definition_id =", value, "processDefinitionId");
            }
            return (Criteria) this;
        }

        public Criteria andProcessDefinitionIdNotEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("process_definition_id <>", value, "processDefinitionId");
            }
            return (Criteria) this;
        }

        public Criteria andProcessDefinitionIdGreaterThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("process_definition_id >", value, "processDefinitionId");
            }
            return (Criteria) this;
        }

        public Criteria andProcessDefinitionIdGreaterThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("process_definition_id >=", value, "processDefinitionId");
            }
            return (Criteria) this;
        }

        public Criteria andProcessDefinitionIdLessThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("process_definition_id <", value, "processDefinitionId");
            }
            return (Criteria) this;
        }

        public Criteria andProcessDefinitionIdLessThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("process_definition_id <=", value, "processDefinitionId");
            }
            return (Criteria) this;
        }

        public Criteria andProcessDefinitionIdLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("process_definition_id like", value, "processDefinitionId");
            }
            return (Criteria) this;
        }

        public Criteria andProcessDefinitionIdNotLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("process_definition_id not like", value, "processDefinitionId");
            }
            return (Criteria) this;
        }

        public Criteria andProcessDefinitionIdInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("process_definition_id in", values, "processDefinitionId");
            }
            return (Criteria) this;
        }

        public Criteria andProcessDefinitionIdNotInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("process_definition_id not in", values, "processDefinitionId");
            }
            return (Criteria) this;
        }

        public Criteria andProcessDefinitionIdBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("process_definition_id between", value1, value2, "processDefinitionId");
            }
            return (Criteria) this;
        }

        public Criteria andProcessDefinitionIdNotBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("process_definition_id not between", value1, value2, "processDefinitionId");
            }
            return (Criteria) this;
        }

        public Criteria andProcessDefinitionVersionEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("process_definition_version =", value, "processDefinitionVersion");
            }
            return (Criteria) this;
        }

        public Criteria andProcessDefinitionVersionNotEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("process_definition_version <>", value, "processDefinitionVersion");
            }
            return (Criteria) this;
        }

        public Criteria andProcessDefinitionVersionGreaterThanWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("process_definition_version >", value, "processDefinitionVersion");
            }
            return (Criteria) this;
        }

        public Criteria andProcessDefinitionVersionGreaterThanOrEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("process_definition_version >=", value, "processDefinitionVersion");
            }
            return (Criteria) this;
        }

        public Criteria andProcessDefinitionVersionLessThanWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("process_definition_version <", value, "processDefinitionVersion");
            }
            return (Criteria) this;
        }

        public Criteria andProcessDefinitionVersionLessThanOrEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("process_definition_version <=", value, "processDefinitionVersion");
            }
            return (Criteria) this;
        }

        public Criteria andProcessDefinitionVersionInWhenPresent(List<Integer> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("process_definition_version in", values, "processDefinitionVersion");
            }
            return (Criteria) this;
        }

        public Criteria andProcessDefinitionVersionNotInWhenPresent(List<Integer> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("process_definition_version not in", values, "processDefinitionVersion");
            }
            return (Criteria) this;
        }

        public Criteria andProcessDefinitionVersionBetweenWhenPresent(Integer value1, Integer value2) {
            if(value1 != null && value2 != null){
                addCriterion("process_definition_version between", value1, value2, "processDefinitionVersion");
            }
            return (Criteria) this;
        }

        public Criteria andProcessDefinitionVersionNotBetweenWhenPresent(Integer value1, Integer value2) {
            if(value1 != null && value2 != null){
                addCriterion("process_definition_version not between", value1, value2, "processDefinitionVersion");
            }
            return (Criteria) this;
        }

        public Criteria andProcessInstanceIdEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("process_instance_id =", value, "processInstanceId");
            }
            return (Criteria) this;
        }

        public Criteria andProcessInstanceIdNotEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("process_instance_id <>", value, "processInstanceId");
            }
            return (Criteria) this;
        }

        public Criteria andProcessInstanceIdGreaterThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("process_instance_id >", value, "processInstanceId");
            }
            return (Criteria) this;
        }

        public Criteria andProcessInstanceIdGreaterThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("process_instance_id >=", value, "processInstanceId");
            }
            return (Criteria) this;
        }

        public Criteria andProcessInstanceIdLessThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("process_instance_id <", value, "processInstanceId");
            }
            return (Criteria) this;
        }

        public Criteria andProcessInstanceIdLessThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("process_instance_id <=", value, "processInstanceId");
            }
            return (Criteria) this;
        }

        public Criteria andProcessInstanceIdLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("process_instance_id like", value, "processInstanceId");
            }
            return (Criteria) this;
        }

        public Criteria andProcessInstanceIdNotLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("process_instance_id not like", value, "processInstanceId");
            }
            return (Criteria) this;
        }

        public Criteria andProcessInstanceIdInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("process_instance_id in", values, "processInstanceId");
            }
            return (Criteria) this;
        }

        public Criteria andProcessInstanceIdNotInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("process_instance_id not in", values, "processInstanceId");
            }
            return (Criteria) this;
        }

        public Criteria andProcessInstanceIdBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("process_instance_id between", value1, value2, "processInstanceId");
            }
            return (Criteria) this;
        }

        public Criteria andProcessInstanceIdNotBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("process_instance_id not between", value1, value2, "processInstanceId");
            }
            return (Criteria) this;
        }

        public Criteria andProcessInstanceNameEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("process_instance_name =", value, "processInstanceName");
            }
            return (Criteria) this;
        }

        public Criteria andProcessInstanceNameNotEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("process_instance_name <>", value, "processInstanceName");
            }
            return (Criteria) this;
        }

        public Criteria andProcessInstanceNameGreaterThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("process_instance_name >", value, "processInstanceName");
            }
            return (Criteria) this;
        }

        public Criteria andProcessInstanceNameGreaterThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("process_instance_name >=", value, "processInstanceName");
            }
            return (Criteria) this;
        }

        public Criteria andProcessInstanceNameLessThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("process_instance_name <", value, "processInstanceName");
            }
            return (Criteria) this;
        }

        public Criteria andProcessInstanceNameLessThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("process_instance_name <=", value, "processInstanceName");
            }
            return (Criteria) this;
        }

        public Criteria andProcessInstanceNameLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("process_instance_name like", value, "processInstanceName");
            }
            return (Criteria) this;
        }

        public Criteria andProcessInstanceNameNotLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("process_instance_name not like", value, "processInstanceName");
            }
            return (Criteria) this;
        }

        public Criteria andProcessInstanceNameInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("process_instance_name in", values, "processInstanceName");
            }
            return (Criteria) this;
        }

        public Criteria andProcessInstanceNameNotInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("process_instance_name not in", values, "processInstanceName");
            }
            return (Criteria) this;
        }

        public Criteria andProcessInstanceNameBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("process_instance_name between", value1, value2, "processInstanceName");
            }
            return (Criteria) this;
        }

        public Criteria andProcessInstanceNameNotBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("process_instance_name not between", value1, value2, "processInstanceName");
            }
            return (Criteria) this;
        }

        public Criteria andActivityIdEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("activity_id =", value, "activityId");
            }
            return (Criteria) this;
        }

        public Criteria andActivityIdNotEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("activity_id <>", value, "activityId");
            }
            return (Criteria) this;
        }

        public Criteria andActivityIdGreaterThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("activity_id >", value, "activityId");
            }
            return (Criteria) this;
        }

        public Criteria andActivityIdGreaterThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("activity_id >=", value, "activityId");
            }
            return (Criteria) this;
        }

        public Criteria andActivityIdLessThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("activity_id <", value, "activityId");
            }
            return (Criteria) this;
        }

        public Criteria andActivityIdLessThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("activity_id <=", value, "activityId");
            }
            return (Criteria) this;
        }

        public Criteria andActivityIdLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("activity_id like", value, "activityId");
            }
            return (Criteria) this;
        }

        public Criteria andActivityIdNotLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("activity_id not like", value, "activityId");
            }
            return (Criteria) this;
        }

        public Criteria andActivityIdInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("activity_id in", values, "activityId");
            }
            return (Criteria) this;
        }

        public Criteria andActivityIdNotInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("activity_id not in", values, "activityId");
            }
            return (Criteria) this;
        }

        public Criteria andActivityIdBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("activity_id between", value1, value2, "activityId");
            }
            return (Criteria) this;
        }

        public Criteria andActivityIdNotBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("activity_id not between", value1, value2, "activityId");
            }
            return (Criteria) this;
        }

        public Criteria andStatusEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("status =", value, "status");
            }
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("status <>", value, "status");
            }
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("status >", value, "status");
            }
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("status >=", value, "status");
            }
            return (Criteria) this;
        }

        public Criteria andStatusLessThanWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("status <", value, "status");
            }
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("status <=", value, "status");
            }
            return (Criteria) this;
        }

        public Criteria andStatusInWhenPresent(List<Integer> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("status in", values, "status");
            }
            return (Criteria) this;
        }

        public Criteria andStatusNotInWhenPresent(List<Integer> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("status not in", values, "status");
            }
            return (Criteria) this;
        }

        public Criteria andStatusBetweenWhenPresent(Integer value1, Integer value2) {
            if(value1 != null && value2 != null){
                addCriterion("status between", value1, value2, "status");
            }
            return (Criteria) this;
        }

        public Criteria andStatusNotBetweenWhenPresent(Integer value1, Integer value2) {
            if(value1 != null && value2 != null){
                addCriterion("status not between", value1, value2, "status");
            }
            return (Criteria) this;
        }

        public Criteria andRetryTimesEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("retry_times =", value, "retryTimes");
            }
            return (Criteria) this;
        }

        public Criteria andRetryTimesNotEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("retry_times <>", value, "retryTimes");
            }
            return (Criteria) this;
        }

        public Criteria andRetryTimesGreaterThanWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("retry_times >", value, "retryTimes");
            }
            return (Criteria) this;
        }

        public Criteria andRetryTimesGreaterThanOrEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("retry_times >=", value, "retryTimes");
            }
            return (Criteria) this;
        }

        public Criteria andRetryTimesLessThanWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("retry_times <", value, "retryTimes");
            }
            return (Criteria) this;
        }

        public Criteria andRetryTimesLessThanOrEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("retry_times <=", value, "retryTimes");
            }
            return (Criteria) this;
        }

        public Criteria andRetryTimesInWhenPresent(List<Integer> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("retry_times in", values, "retryTimes");
            }
            return (Criteria) this;
        }

        public Criteria andRetryTimesNotInWhenPresent(List<Integer> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("retry_times not in", values, "retryTimes");
            }
            return (Criteria) this;
        }

        public Criteria andRetryTimesBetweenWhenPresent(Integer value1, Integer value2) {
            if(value1 != null && value2 != null){
                addCriterion("retry_times between", value1, value2, "retryTimes");
            }
            return (Criteria) this;
        }

        public Criteria andRetryTimesNotBetweenWhenPresent(Integer value1, Integer value2) {
            if(value1 != null && value2 != null){
                addCriterion("retry_times not between", value1, value2, "retryTimes");
            }
            return (Criteria) this;
        }

        public Criteria andNeedRetryEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("need_retry =", value, "needRetry");
            }
            return (Criteria) this;
        }

        public Criteria andNeedRetryNotEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("need_retry <>", value, "needRetry");
            }
            return (Criteria) this;
        }

        public Criteria andNeedRetryGreaterThanWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("need_retry >", value, "needRetry");
            }
            return (Criteria) this;
        }

        public Criteria andNeedRetryGreaterThanOrEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("need_retry >=", value, "needRetry");
            }
            return (Criteria) this;
        }

        public Criteria andNeedRetryLessThanWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("need_retry <", value, "needRetry");
            }
            return (Criteria) this;
        }

        public Criteria andNeedRetryLessThanOrEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("need_retry <=", value, "needRetry");
            }
            return (Criteria) this;
        }

        public Criteria andNeedRetryInWhenPresent(List<Integer> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("need_retry in", values, "needRetry");
            }
            return (Criteria) this;
        }

        public Criteria andNeedRetryNotInWhenPresent(List<Integer> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("need_retry not in", values, "needRetry");
            }
            return (Criteria) this;
        }

        public Criteria andNeedRetryBetweenWhenPresent(Integer value1, Integer value2) {
            if(value1 != null && value2 != null){
                addCriterion("need_retry between", value1, value2, "needRetry");
            }
            return (Criteria) this;
        }

        public Criteria andNeedRetryNotBetweenWhenPresent(Integer value1, Integer value2) {
            if(value1 != null && value2 != null){
                addCriterion("need_retry not between", value1, value2, "needRetry");
            }
            return (Criteria) this;
        }

        public Criteria andOwnerIdEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("owner_id =", value, "ownerId");
            }
            return (Criteria) this;
        }

        public Criteria andOwnerIdNotEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("owner_id <>", value, "ownerId");
            }
            return (Criteria) this;
        }

        public Criteria andOwnerIdGreaterThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("owner_id >", value, "ownerId");
            }
            return (Criteria) this;
        }

        public Criteria andOwnerIdGreaterThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("owner_id >=", value, "ownerId");
            }
            return (Criteria) this;
        }

        public Criteria andOwnerIdLessThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("owner_id <", value, "ownerId");
            }
            return (Criteria) this;
        }

        public Criteria andOwnerIdLessThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("owner_id <=", value, "ownerId");
            }
            return (Criteria) this;
        }

        public Criteria andOwnerIdLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("owner_id like", value, "ownerId");
            }
            return (Criteria) this;
        }

        public Criteria andOwnerIdNotLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("owner_id not like", value, "ownerId");
            }
            return (Criteria) this;
        }

        public Criteria andOwnerIdInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("owner_id in", values, "ownerId");
            }
            return (Criteria) this;
        }

        public Criteria andOwnerIdNotInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("owner_id not in", values, "ownerId");
            }
            return (Criteria) this;
        }

        public Criteria andOwnerIdBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("owner_id between", value1, value2, "ownerId");
            }
            return (Criteria) this;
        }

        public Criteria andOwnerIdNotBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("owner_id not between", value1, value2, "ownerId");
            }
            return (Criteria) this;
        }

        public Criteria andTaskIdEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("task_id =", value, "taskId");
            }
            return (Criteria) this;
        }

        public Criteria andTaskIdNotEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("task_id <>", value, "taskId");
            }
            return (Criteria) this;
        }

        public Criteria andTaskIdGreaterThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("task_id >", value, "taskId");
            }
            return (Criteria) this;
        }

        public Criteria andTaskIdGreaterThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("task_id >=", value, "taskId");
            }
            return (Criteria) this;
        }

        public Criteria andTaskIdLessThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("task_id <", value, "taskId");
            }
            return (Criteria) this;
        }

        public Criteria andTaskIdLessThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("task_id <=", value, "taskId");
            }
            return (Criteria) this;
        }

        public Criteria andTaskIdLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("task_id like", value, "taskId");
            }
            return (Criteria) this;
        }

        public Criteria andTaskIdNotLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("task_id not like", value, "taskId");
            }
            return (Criteria) this;
        }

        public Criteria andTaskIdInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("task_id in", values, "taskId");
            }
            return (Criteria) this;
        }

        public Criteria andTaskIdNotInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("task_id not in", values, "taskId");
            }
            return (Criteria) this;
        }

        public Criteria andTaskIdBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("task_id between", value1, value2, "taskId");
            }
            return (Criteria) this;
        }

        public Criteria andTaskIdNotBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("task_id not between", value1, value2, "taskId");
            }
            return (Criteria) this;
        }

        public Criteria andAgentCodeEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("agent_code =", value, "agentCode");
            }
            return (Criteria) this;
        }

        public Criteria andAgentCodeNotEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("agent_code <>", value, "agentCode");
            }
            return (Criteria) this;
        }

        public Criteria andAgentCodeGreaterThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("agent_code >", value, "agentCode");
            }
            return (Criteria) this;
        }

        public Criteria andAgentCodeGreaterThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("agent_code >=", value, "agentCode");
            }
            return (Criteria) this;
        }

        public Criteria andAgentCodeLessThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("agent_code <", value, "agentCode");
            }
            return (Criteria) this;
        }

        public Criteria andAgentCodeLessThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("agent_code <=", value, "agentCode");
            }
            return (Criteria) this;
        }

        public Criteria andAgentCodeLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("agent_code like", value, "agentCode");
            }
            return (Criteria) this;
        }

        public Criteria andAgentCodeNotLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("agent_code not like", value, "agentCode");
            }
            return (Criteria) this;
        }

        public Criteria andAgentCodeInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("agent_code in", values, "agentCode");
            }
            return (Criteria) this;
        }

        public Criteria andAgentCodeNotInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("agent_code not in", values, "agentCode");
            }
            return (Criteria) this;
        }

        public Criteria andAgentCodeBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("agent_code between", value1, value2, "agentCode");
            }
            return (Criteria) this;
        }

        public Criteria andAgentCodeNotBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("agent_code not between", value1, value2, "agentCode");
            }
            return (Criteria) this;
        }

        public Criteria andParallelStartActivityIdEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("parallel_start_activity_id =", value, "parallelStartActivityId");
            }
            return (Criteria) this;
        }

        public Criteria andParallelStartActivityIdNotEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("parallel_start_activity_id <>", value, "parallelStartActivityId");
            }
            return (Criteria) this;
        }

        public Criteria andParallelStartActivityIdGreaterThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("parallel_start_activity_id >", value, "parallelStartActivityId");
            }
            return (Criteria) this;
        }

        public Criteria andParallelStartActivityIdGreaterThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("parallel_start_activity_id >=", value, "parallelStartActivityId");
            }
            return (Criteria) this;
        }

        public Criteria andParallelStartActivityIdLessThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("parallel_start_activity_id <", value, "parallelStartActivityId");
            }
            return (Criteria) this;
        }

        public Criteria andParallelStartActivityIdLessThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("parallel_start_activity_id <=", value, "parallelStartActivityId");
            }
            return (Criteria) this;
        }

        public Criteria andParallelStartActivityIdLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("parallel_start_activity_id like", value, "parallelStartActivityId");
            }
            return (Criteria) this;
        }

        public Criteria andParallelStartActivityIdNotLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("parallel_start_activity_id not like", value, "parallelStartActivityId");
            }
            return (Criteria) this;
        }

        public Criteria andParallelStartActivityIdInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("parallel_start_activity_id in", values, "parallelStartActivityId");
            }
            return (Criteria) this;
        }

        public Criteria andParallelStartActivityIdNotInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("parallel_start_activity_id not in", values, "parallelStartActivityId");
            }
            return (Criteria) this;
        }

        public Criteria andParallelStartActivityIdBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("parallel_start_activity_id between", value1, value2, "parallelStartActivityId");
            }
            return (Criteria) this;
        }

        public Criteria andParallelStartActivityIdNotBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("parallel_start_activity_id not between", value1, value2, "parallelStartActivityId");
            }
            return (Criteria) this;
        }

        public Criteria andHasParallelEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("has_parallel =", value, "hasParallel");
            }
            return (Criteria) this;
        }

        public Criteria andHasParallelNotEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("has_parallel <>", value, "hasParallel");
            }
            return (Criteria) this;
        }

        public Criteria andHasParallelGreaterThanWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("has_parallel >", value, "hasParallel");
            }
            return (Criteria) this;
        }

        public Criteria andHasParallelGreaterThanOrEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("has_parallel >=", value, "hasParallel");
            }
            return (Criteria) this;
        }

        public Criteria andHasParallelLessThanWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("has_parallel <", value, "hasParallel");
            }
            return (Criteria) this;
        }

        public Criteria andHasParallelLessThanOrEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("has_parallel <=", value, "hasParallel");
            }
            return (Criteria) this;
        }

        public Criteria andHasParallelInWhenPresent(List<Integer> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("has_parallel in", values, "hasParallel");
            }
            return (Criteria) this;
        }

        public Criteria andHasParallelNotInWhenPresent(List<Integer> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("has_parallel not in", values, "hasParallel");
            }
            return (Criteria) this;
        }

        public Criteria andHasParallelBetweenWhenPresent(Integer value1, Integer value2) {
            if(value1 != null && value2 != null){
                addCriterion("has_parallel between", value1, value2, "hasParallel");
            }
            return (Criteria) this;
        }

        public Criteria andHasParallelNotBetweenWhenPresent(Integer value1, Integer value2) {
            if(value1 != null && value2 != null){
                addCriterion("has_parallel not between", value1, value2, "hasParallel");
            }
            return (Criteria) this;
        }
    }

    /**
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends AbstractGeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    /**
     *
     * @mbg.generated
     */
    public enum OrderCondition {
        /**
         *主键
         */
        ID("id"),
        /**
         *创建时间
         */
        GMTCREATE("gmt_create"),
        /**
         *修改时间
         */
        GMTMODIFIED("gmt_modified"),
        /**
         *流程定义id
         */
        PROCESSDEFINITIONID("process_definition_id"),
        /**
         *流程定义版本号
         */
        PROCESSDEFINITIONVERSION("process_definition_version"),
        /**
         *流程实例id
         */
        PROCESSINSTANCEID("process_instance_id"),
        /**
         *流程实例名称
         */
        PROCESSINSTANCENAME("process_instance_name"),
        /**
         *当前节点id
         */
        ACTIVITYID("activity_id"),
        /**
         *流程状态，0:运行 1:暂停 2:异常 3:完成 4:锁定
         */
        STATUS("status"),
        /**
         *当前重试次数
         */
        RETRYTIMES("retry_times"),
        /**
         *是否需要重试
         */
        NEEDRETRY("need_retry"),
        /**
         *拥有者
         */
        OWNERID("owner_id"),
        /**
         *异步任务ID
         */
        TASKID("task_id"),
        /**
         *应用code
         */
        AGENTCODE("agent_code"),
        /**
         *对应前置并行开始节点id
         */
        PARALLELSTARTACTIVITYID("parallel_start_activity_id"),
        /**
         *是否包含并行节点
         */
        HASPARALLEL("has_parallel");

        private String columnName;

        OrderCondition(String columnName) {
            this.columnName = columnName;
        }

        public String getColumnName() {
            return columnName;
        }

        public static OrderCondition getEnumByName(String name) {
            OrderCondition[] orderConditions = OrderCondition.values();
            for (OrderCondition orderCondition : orderConditions) {
                if (orderCondition.name().equalsIgnoreCase(name)) {
                    return orderCondition;
                }
            }
            throw new RuntimeException("OrderCondition of " + name + " enum not exist");
        }

        @Override
        public String toString() {
            return columnName;
        }
    }

    /**
     *
     * @mbg.generated
     */
    public enum SortType {
        /**
         * 升序
         */
        ASC("asc"),
        /**
         * 降序
         */
        DESC("desc");

        private String value;

        SortType(String value) {
            this.value = value;
        }

        public String getValue() {
            return value;
        }

        public static SortType getEnumByName(String name) {
            SortType[] sortTypes = SortType.values();
            for (SortType sortType : sortTypes) {
                if (sortType.name().equalsIgnoreCase(name)) {
                    return sortType;
                }
            }
            throw new RuntimeException("SortType of " + name + " enum not exist");
        }

        @Override
        public String toString() {
            return value;
        }
    }
}